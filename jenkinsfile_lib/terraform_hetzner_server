#!/usr/bin/env groovy

/* import shared library */
@Library('jenkins-dsl')_

pipeline {
  agent none

  stages {
    stage('Terraform Create Server') {
      agent {
    label "terratest" 
  }
      steps {
        container('terratest') {
              git branch: "master",
              credentialsId: "github",
              url: "https://github.com/andycockers/kubernetes"
              withCredentials([file(credentialsId: 'jenkins-test-project', variable: 'GOOGLE_APPLICATION_CREDENTIALS'),string(credentialsId: 'hetzner', variable: 'hcloud_token')]) {
            sh "cd terraform/hetzner-server && terraform init -var='hcloud_token=$hcloud_token'"
            sh "cd terraform/hetzner-server && terraform plan -var='hcloud_token=$hcloud_token'"
            sh "cd terraform/hetzner-server && terraform apply --auto-approve -var='hcloud_token=$hcloud_token'"
            sh "cd terraform/hetzner-server && echo -n SERVER= > ipv4_address.txt && terraform output -json ipv4_address >> ipv4_address.txt"
        script {
            def server = readProperties file: 'terraform/hetzner-server/ipv4_address.txt'
            env.SERVER = server.SERVER
        }
        sh "echo $SERVER"
          }
        }
            }
}

    stage('Ansible Configure Server') {
      agent {
    label "ansible" 
  }
      steps {
        container('ansible') {
              git branch: "master",
              credentialsId: "github",
              url: "https://github.com/andycockers/gcp-automation"
              withCredentials([file(credentialsId: 'hetzner-ssh', variable: 'HETZNER'), string(credentialsId: 'ansible-vault', variable: 'VAULT')]) {
        sh "cd ansible && echo $VAULT > vault"        
        sh "cd ansible && ansible-playbook -i $SERVER, --key-file $HETZNER -u root install-swarm-client.yml --vault-password-file vault"
      }
        }
            }
}

    stage('Terraform destroy') {
      agent {
    label "terratest" 
  }
      steps {
        container('terratest') {
          git branch: "master",
              credentialsId: "github",
              url: "https://github.com/andycockers/kubernetes"
          withCredentials([file(credentialsId: 'jenkins-test-project', variable: 'GOOGLE_APPLICATION_CREDENTIALS'),string(credentialsId: 'hetzner', variable: 'hcloud_token')]) {
        sh "cd terraform/hetzner-server && terraform init -var='hcloud_token=$hcloud_token'"
        sh "cd terraform/hetzner-server && terraform destroy --auto-approve -var='hcloud_token=$hcloud_token'"
      }
        }
      }
    }

      }
}