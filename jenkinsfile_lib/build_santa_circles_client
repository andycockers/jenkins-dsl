#!/usr/bin/env groovy

/* import shared library */
@Library('jenkins-dsl')_

pipeline {
  agent { kubernetes {
      yaml """
        apiVersion: v1
        kind: Pod
        metadata:
          labels:
            jenkins: build
        spec:
          containers:
          - name: rust-jenkins-agent
            image: rust:buster
            command:
            - cat
            tty: true
          - name: docker-jenkins-agent
            image: docker
            command:
            - cat
            tty: true
            volumeMounts:
            - mountPath: /var/run/docker.sock
              name: docker-sock
          volumes:
          - name: docker-sock
            hostPath:
              path: /var/run/docker.sock
        """ }
  }

  stages {
    stage('Code Checkout from GitLab') {
      steps {
        container('rust-jenkins-agent') {
              git branch: "cockers",
              credentialsId: "gitlab",
              url: "git@gitlab.com:cockerill.andrew/santa-circles.git"
        }
            }
}

stage('Build Santa Circles Client') {
      steps {
        container('rust-jenkins-agent') {
        
        sh '''rustup target add aarch64-unknown-linux-musl aarch64-unknown-linux-gnu
              cargo build --target aarch64-unknown-linux-gnu --release
              '''
      
        }
      }
    }

stage('Docker build Santa Circles client image') {
      steps {
        container('docker-jenkins-agent') {
        withCredentials([string(credentialsId: 'dockerhub', variable: 'DOCKERHUB')]){
        sh '''docker login -u calmmopey -p $DOCKERHUB
              docker buildx create --name container --driver docker-container
              docker buildx build --push -t calmmopey/santa-circles --platform linux/arm64 --progress=plain --builder=container -f Dockerfile-arm64 .
              '''
      }
        }
      }
    }
  }
}

