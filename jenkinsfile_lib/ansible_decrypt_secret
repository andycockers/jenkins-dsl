#!/usr/bin/env groovy

/* import shared library */
@Library('jenkins-dsl')_

pipeline {
  agent {
    kubernetes {
      yaml """
       apiVersion: v1
       kind: Pod
       metadata:
        labels:
            jenkins: build
       spec:
        containers:
        - name: worker
          image: wolfman.crabdance.com/worker-arm-buster
          command:
          - cat
          tty: true
          volumeMounts:
            - name: gcp-service-account
              mountPath: /secret
          env:
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /secret/jenkins-test-project.json
        volumes:
          - name: gcp-service-account
            secret:
             secretName: gcp-service-account
        serviceAccount: default


          
  """

    }
  }

  stages {
    stage('Code Checkout from GitHub') {
      steps {
        container('worker') {
              git branch: "master",
              credentialsId: "github",
              url: "git@github.com:andycockers/gcp-automation.git"
        }
            }
}

stage('Ansible Decrypt Secret') {
      steps {
        container('worker') {
          withCredentials([string(credentialsId: 'ansible-vault', variable: 'VAULT')]) {
          sh "echo $VAULT > vault_pass"
          sh "ansible-vault view --vault-password-file=vault_pass ansible/roles/copy-ssh-keypair/files/hpc > hpc"
          sh "cat hpc"
      }
      }
    }
  }
}
}

